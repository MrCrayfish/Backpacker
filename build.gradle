import groovy.json.JsonOutput
import groovy.json.JsonSlurper

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = project.property('mod.version') + "-1.16.3"
group = 'com.mrcrayfish'
archivesBaseName = project.property('mod.id')

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

mixin {
    add sourceSets.main, "backpacker.refmap.json"
}

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.16'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=backpacker.mixins.json'
            mods {
                backpacker {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=backpacker.mixins.json'
            mods {
                backpacker {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')
            mods {
                backpacker {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    doLast {
        fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.3-34.1.0'
    compile fg.deobf('curse.maven:backpacked-352835:3108379')
}

jar {
    manifest {
        attributes([
                "Specification-Title": project.property('mod.name'),
                "Specification-Vendor": project.property('mod.author'),
                "Specification-Version": "1",
                "Implementation-Title": project.property('mod.name'),
                "Implementation-Version": project.property('mod.version'),
                "Implementation-Vendor" : project.property('mod.author'),
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "backpacker.mixins.json"
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file://C:/dev/maven/mcmodsrepo"
        }
    }
}